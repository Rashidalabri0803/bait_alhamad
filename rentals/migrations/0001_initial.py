# Generated by Django 5.0.3 on 2024-12-15 18:44

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_type', models.CharField(choices=[('apartment', 'شقة'), ('office', 'مكتب'), ('shop', 'محل')], max_length=20, verbose_name='نوع الوحدة')),
                ('unit_number', models.CharField(max_length=50, unique=True, verbose_name='رقم الوحدة')),
                ('rent_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='سعر الإيجار')),
                ('electricity_account', models.CharField(max_length=50, verbose_name='رقم حساب الكهرباء')),
                ('water_account', models.CharField(max_length=50, verbose_name='رقم حساب المياه')),
            ],
            options={
                'verbose_name': 'وحدة',
                'verbose_name_plural': 'الوحدات',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('admin', 'مشرف'), ('tenant', 'مستأجر')], max_length=10, verbose_name='نوع المستخدم')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='رقم الهاتف')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'مستخدم',
                'verbose_name_plural': 'المستخدمون',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_type', models.CharField(choices=[('individual', 'فرد'), ('company', 'شركة')], max_length=20, verbose_name='نوع المستأجر')),
                ('company_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='اسم الشركة')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'مستأجر',
                'verbose_name_plural': 'المستأجرون',
            },
        ),
        migrations.CreateModel(
            name='Lease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='تاريخ البداية')),
                ('end_date', models.DateField(verbose_name='تاريخ النهاية')),
                ('electricity_previous', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='فاتورة الكهرباء السابق')),
                ('electricity_current', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='فاتورة الكهرباء الحالي')),
                ('water_previous', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='فاتورة المياه السابق')),
                ('water_current', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='فاتورة المياه الحالي')),
                ('agreement_note', models.TextField(blank=True, null=True, verbose_name='ملاحظات العقد')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rentals.tenant', verbose_name='المستأجر')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rentals.unit', verbose_name='الوحدة')),
            ],
            options={
                'verbose_name': 'عقد إيجار',
                'verbose_name_plural': 'عقود الإيجار',
            },
        ),
    ]
